import { DynamoDBClient } from "@aws-sdk/client-dynamodb";import { DynamoDBDocumentClient, PutCommand, GetCommand, QueryCommand, DeleteCommand, ScanCommand } from "@aws-sdk/lib-dynamodb";const client = new DynamoDBClient({  region: process.env.AWS_REGION || "us-east-1",  credentials: {    accessKeyId: process.env.AWS_ACCESS_KEY_ID || "",    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY || "",  },});const docClient = DynamoDBDocumentClient.from(client);export const dynamoDB = {  async putItem(tableName: string, item: any) {    const command = new PutCommand({      TableName: tableName,      Item: item,    });    return await docClient.send(command);  },  async getItem(tableName: string, key: any) {    const command = new GetCommand({      TableName: tableName,      Key: key,    });    return await docClient.send(command);  },  async queryItems(tableName: string, keyConditionExpression: string, expressionAttributeValues: any) {    const command = new QueryCommand({      TableName: tableName,      KeyConditionExpression: keyConditionExpression,      ExpressionAttributeValues: expressionAttributeValues,    });    return await docClient.send(command);  },  async deleteItem(tableName: string, key: any) {    const command = new DeleteCommand({      TableName: tableName,      Key: key,    });    return await docClient.send(command);  },  async scanItems(tableName: string) {    const command = new ScanCommand({      TableName: tableName,    });    return await docClient.send(command);  },}; 