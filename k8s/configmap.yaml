apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: aws-next-express
  labels:
    app: aws-next-express
data:
  NODE_ENV: "production"
  AWS_REGION: "us-east-1"
  PORT: "3000"
  NEXT_TELEMETRY_DISABLED: "1"
  # Database configuration (non-sensitive)
  DB_HOST: "mysql-service"
  DB_PORT: "3306"
  DB_NAME: "nextapp_db"
  # Redis configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  # Application settings
  MAX_FILE_SIZE: "10485760" # 10MB
  ALLOWED_ORIGINS: "https://your-domain.com,https://www.your-domain.com"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: aws-next-express
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        upstream nextjs_upstream {
            server app-service:3000;
        }
        
        server {
            listen 80;
            server_name _;
            
            # Security headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            
            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # Main application
            location / {
                proxy_pass http://nextjs_upstream;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
            }
        }
    } 