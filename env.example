# ===============================================
# AWS Next Express - Environment Configuration
# ===============================================
# Copy this file to .env.local and fill in your actual values

# ===============================================
# AWS CONFIGURATION
# ===============================================
# Your AWS credentials - Required for S3, RDS, DynamoDB
AWS_REGION="us-east-1"
AWS_ACCESS_KEY_ID="your_access_key"
AWS_SECRET_ACCESS_KEY="your_secret_key"

# S3 Bucket for files and profile pictures
AWS_S3_BUCKET_NAME="your_bucket_name"

# ===============================================
# DATABASE CONFIGURATION - RDS MYSQL
# ===============================================
# For production RDS instance
DATABASE_URL="mysql://user:password@localhost:3306/nextapp_db"

# For local development with Docker MySQL (uncomment to use)
# DATABASE_URL="mysql://root:password@localhost:3306/aws_next_express"

# ===============================================
# DYNAMODB CONFIGURATION
# ===============================================
# For local development with DynamoDB Local
DYNAMODB_ENDPOINT=http://localhost:8000
DYNAMODB_USERS_TABLE=users
DYNAMODB_FILES_TABLE=files

# For production DynamoDB (remove DYNAMODB_ENDPOINT line)
# DYNAMODB_USERS_TABLE=aws-next-express-users
# DYNAMODB_FILES_TABLE=aws-next-express-files

# ===============================================
# NEXT.JS CONFIGURATION
# ===============================================
# Authentication secret (generate a random string)
NEXTAUTH_SECRET="your_secret_key_here"

# Application URL
NEXTAUTH_URL="http://localhost:3000"

# ===============================================
# DOCKER CONFIGURATION (Optional)
# ===============================================
# Docker registry for production builds
DOCKER_REGISTRY=your_docker_registry_here

# ===============================================
# KUBERNETES CONFIGURATION (Optional)
# ===============================================
# Kubernetes namespace for deployment
K8S_NAMESPACE=default

# ===============================================
# ARGOCD CONFIGURATION (Optional)
# ===============================================
# ArgoCD server for GitOps deployment
ARGOCD_SERVER=your_argocd_server_here
ARGOCD_AUTH_TOKEN=your_argocd_auth_token_here

# ===============================================
# EXAMPLE VALUES FOR QUICK SETUP
# ===============================================
# Copy these values for local development

# Example AWS (you need real credentials)
# AWS_REGION=us-east-1
# AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
# AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
# AWS_S3_BUCKET_NAME=my-app-bucket-name

# Example Database URLs
# Production RDS:
# DATABASE_URL="mysql://admin:mypassword@aws-next-express.cluster-xxxxx.us-east-1.rds.amazonaws.com:3306/aws_next_express"

# Local Docker MySQL:
# DATABASE_URL="mysql://root:password@localhost:3306/aws_next_express"

# Example NextAuth Secret (generate your own)
# NEXTAUTH_SECRET=abcdef123456789abcdef123456789abcdef123456
# NEXTAUTH_URL=http://localhost:3000

# ===============================================
# SETUP INSTRUCTIONS
# ===============================================
# 1. Copy this file: cp env.example .env.local
# 2. Fill in your AWS credentials and bucket name
# 3. Choose your database configuration (RDS or local MySQL)
# 4. Generate a random NEXTAUTH_SECRET
# 5. Run: npm run dev or docker-compose up

# For quick local development with Docker:
# docker-compose -f docker-compose.full.yml up -d
# npx prisma migrate dev
# node scripts/init-dynamodb.js

# Redis (Optional)
REDIS_URL="redis://localhost:6379"

# Environment
NODE_ENV="development" 